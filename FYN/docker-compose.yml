version: "3.8"

services:

  php:
    container_name: "${DB_NAME}_php"
    build:
      context: ./php
      args:
        GIT_USEREMAIL: ${GIT_USEREMAIL}
        GIT_USERNAME: ${GIT_USERNAME}
    ports:
      - "${PHP_PORT}:8000"
    volumes:
      - ./app/backend:/var/www/docker_sf
    depends_on:
      - pgsql
    networks:
      - my_network  

  node:
    container_name: "${DB_NAME}_node"
    build:
      context: ./app/frontend
    ports:
      - "${NODE_PORT}:3000"
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    volumes:
      - ./app/frontend:/app/frontend
    depends_on:
      - php
    networks:
      - my_network 
    environment:
      DB_HOST: "${DB_HOST}"
      DB_USER: "${DB_USER_NAME}"
      DB_PASSWORD: ${DB_USER_PASSWORD}"
      DB_DATABASE: ${DB_NAME}"
  # nginx:
  #   container_name: "${DB_NAME}_nginx"
  #   image: nginx:stable-alpine
  #   ports:
  #     - "${HTTP_PORT}:80"
  #   volumes:
  #     - ./app/backend:/var/www/docker_sf
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - php
  #     - pgsql
  #   networks:
  #     - my_network

  pgsql:
      image: postgres:latest
      container_name: "${DB_NAME}_pgsql"
      restart: always
      environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER_NAME}
        - POSTGRES_PASSWORD=${DB_USER_PASSWORD}
      ports:
        - "${POSTGRES_PORT}:5432"
      volumes:
        - db_data:/var/lib/mysql
      networks:
      - my_network

  # phpmyadmin:
  #   container_name: "${DB_NAME}_phpmyadmin"
  #   image: phpmyadmin/phpmyadmin:latest
  #   links:
  #     - pgsql
  #   depends_on:
  #     - pgsql
  #   ports:
  #     - "${PHPMYADMIN_PORT}:80"
  #   environment:
  #     PMA_ARBITRARY: 1
  #     PMA_HOST: pgsql
  #     PMA_USER: ${DB_USER_NAME}
  #     PMA_PASSWORD: ${DB_USER_PASSWORD}
  #     UPLOAD_LIMIT: 20M
  #   restart: always
  #   networks:
  #     - my_network

  # maildev:
  #   container_name: "${DB_NAME}_maildev"
  #   image: maildev/maildev
  #   command: ["bin/maildev", "--web", "80", "--smtp", "25", "--hide-extensions", "STARTTLS"]
  #   ports:
  #     - "${MAILDEV_PORT}:80"
  #   restart: always
  #   networks:
  #     - my_network

volumes:
  db_data:
  
networks:
  my_network:
    driver: bridge